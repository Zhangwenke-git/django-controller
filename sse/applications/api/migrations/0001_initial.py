# Generated by Django 3.2.10 on 2022-07-16 10:50

import api.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CrontabExecID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=64, null=True, verbose_name='执行编码')),
                ('task', models.CharField(max_length=64, null=True, verbose_name='定时任务名称')),
                ('task_type', models.SmallIntegerField(choices=[(0, '普通任务'), (1, '定时任务'), (2, '轮询任务')], null=True, verbose_name='任务类型')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
            ],
            options={
                'verbose_name_plural': '定时任务和执行编码对照表',
                'db_table': 'crontab_exec',
                'ordering': ('-create_time',),
            },
        ),
        migrations.CreateModel(
            name='ExecutionRecord',
            fields=[
                ('code', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='执行编码')),
                ('remark', models.CharField(blank=True, max_length=128, null=True, verbose_name='执行备注')),
                ('statue', models.SmallIntegerField(choices=[(0, '执行完毕'), (1, '执行中'), (2, '执行超时'), (3, '执行异常'), (4, '未启动')], default=4, verbose_name='状态')),
                ('type', models.SmallIntegerField(choices=[(0, '测试项目'), (1, '测试套件'), (2, '测试用例'), (3, '未知')], default=3, verbose_name='类型')),
                ('cron_task_status', models.SmallIntegerField(choices=[(1, '运行中'), (2, '已结束'), (3, '暂停'), (4, '已删除'), (5, '过期')], default=None, null=True, verbose_name='类型')),
                ('task_type', models.SmallIntegerField(choices=[(0, '普通任务'), (1, '定时任务'), (2, '轮询任务')], default=0, verbose_name='任务类型')),
                ('stick_start_point', models.DateTimeField(null=True, verbose_name='定时任务时间点')),
                ('loop_interval', models.SmallIntegerField(null=True, verbose_name='轮询任务时间间隔')),
                ('start', models.CharField(max_length=32, verbose_name='开始执行时间')),
                ('path', models.CharField(blank=True, max_length=128, null=True, verbose_name='FTP报告路径')),
                ('duration', models.CharField(blank=True, max_length=32, null=True, verbose_name='耗时')),
                ('person', models.CharField(max_length=32, verbose_name='执行人员')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('create_date', models.DateField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name_plural': '执行记录',
                'db_table': 'record',
                'ordering': ('-update_time',),
            },
        ),
        migrations.CreateModel(
            name='ExecutionRequestBackup',
            fields=[
                ('code', models.CharField(max_length=64, primary_key=True, serialize=False, verbose_name='执行编码')),
                ('body', models.JSONField(verbose_name='请求体')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
            ],
            options={
                'verbose_name_plural': '执行请求备份',
                'db_table': 'request_backup',
                'ordering': ('-update_time',),
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('uid', models.CharField(auto_created=True, default=api.models.UUIDTools.uuid4_hex, editable=False, max_length=64, primary_key=True, serialize=False, verbose_name='UID')),
                ('statue', models.SmallIntegerField(choices=[(0, '作废'), (1, '有效')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='项目名称')),
                ('description', models.CharField(blank=True, max_length=320, null=True, verbose_name='项目描述')),
                ('start', models.DateField(blank=True, max_length=64, null=True, verbose_name='项目开始')),
                ('end', models.DateField(blank=True, max_length=64, null=True, verbose_name='项目结束')),
                ('process', models.PositiveSmallIntegerField(default=0, verbose_name='项目进度')),
                ('last_execute', models.PositiveSmallIntegerField(default=0, verbose_name='最近一次执行成功率')),
            ],
            options={
                'verbose_name_plural': 'API项目管理',
                'db_table': 'project',
                'ordering': ('-update_time',),
            },
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('uid', models.CharField(auto_created=True, default=api.models.UUIDTools.uuid4_hex, editable=False, max_length=64, primary_key=True, serialize=False, verbose_name='UID')),
                ('statue', models.SmallIntegerField(choices=[(0, '作废'), (1, '有效')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('scenario', models.CharField(max_length=64, unique=True, verbose_name='场景名称')),
                ('parameter', models.JSONField(null=True, verbose_name='请求参数')),
                ('validator', models.JSONField(null=True, verbose_name='验证字段')),
            ],
            options={
                'verbose_name_plural': '用例场景',
                'db_table': 'scenario',
                'ordering': ('-update_time',),
            },
        ),
        migrations.CreateModel(
            name='Sql',
            fields=[
                ('uid', models.CharField(auto_created=True, default=api.models.UUIDTools.uuid4_hex, editable=False, max_length=64, primary_key=True, serialize=False, verbose_name='UID')),
                ('statue', models.SmallIntegerField(choices=[(0, '作废'), (1, '有效')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('name', models.CharField(max_length=64, verbose_name='名称')),
                ('sql', models.CharField(max_length=640, verbose_name='sql语句')),
                ('is_all', models.BooleanField(default=1, verbose_name='是否全量输出')),
                ('field_list', models.CharField(max_length=320, verbose_name='字段列表')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Templates',
            fields=[
                ('uid', models.CharField(auto_created=True, default=api.models.UUIDTools.uuid4_hex, editable=False, max_length=64, primary_key=True, serialize=False, verbose_name='UID')),
                ('statue', models.SmallIntegerField(choices=[(0, '作废'), (1, '有效')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='模板名称')),
                ('url', models.URLField(max_length=128, verbose_name='URL地址')),
                ('method', models.SmallIntegerField(choices=[(0, 'GET'), (1, 'POST'), (2, 'PUT'), (3, 'DELETE')], default=1, verbose_name='请求方式')),
                ('header', models.JSONField(default=api.models.default_header, null=True, verbose_name='headers')),
                ('data', models.JSONField(null=True, verbose_name='请求模板')),
                ('default', models.JSONField(null=True, verbose_name='参数默认值')),
                ('process_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='进程名称')),
                ('linux_order_str', models.CharField(blank=True, max_length=100, null=True, verbose_name='linux命令')),
                ('table_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='所需表名')),
            ],
            options={
                'verbose_name_plural': '请求接口模板',
                'db_table': 'templates',
                'ordering': ('-update_time',),
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('uid', models.CharField(auto_created=True, default=api.models.UUIDTools.uuid4_hex, editable=False, max_length=64, primary_key=True, serialize=False, verbose_name='UID')),
                ('statue', models.SmallIntegerField(choices=[(0, '作废'), (1, '有效')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('case', models.CharField(max_length=64, unique=True, verbose_name='测试用例')),
                ('case_title', models.CharField(max_length=100, verbose_name='测试用例名称')),
                ('case_description', models.CharField(blank=True, max_length=320, null=True, verbose_name='测试用例描述')),
                ('priority', models.SmallIntegerField(choices=[(0, '高'), (1, '中'), (2, '低')], default=0, verbose_name='优先级')),
            ],
            options={
                'verbose_name_plural': '用例函数',
                'db_table': 'case',
                'ordering': ('-update_time',),
            },
        ),
        migrations.CreateModel(
            name='TestSuit',
            fields=[
                ('uid', models.CharField(auto_created=True, default=api.models.UUIDTools.uuid4_hex, editable=False, max_length=64, primary_key=True, serialize=False, verbose_name='UID')),
                ('statue', models.SmallIntegerField(choices=[(0, '作废'), (1, '有效')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('module', models.CharField(max_length=64, unique=True, verbose_name='Py文件名称')),
                ('class_title', models.CharField(blank=True, max_length=32, null=True, verbose_name='测试类名称')),
            ],
            options={
                'verbose_name_plural': '用例集',
                'db_table': 'suit',
                'ordering': ('-update_time',),
            },
        ),
    ]
