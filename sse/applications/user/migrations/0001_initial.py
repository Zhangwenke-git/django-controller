# Generated by Django 3.2.8 on 2022-06-13 10:27

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FirstLayerMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(0, 'api'), (1, 'public')], default=1, verbose_name='类型')),
                ('name', models.CharField(max_length=64, verbose_name='一层菜单名')),
                ('icon', models.CharField(default='glyphicon glyphicon-blackboard', max_length=64, verbose_name='图标')),
                ('url_type', models.SmallIntegerField(choices=[(0, '相关的名字'), (1, '固定的URL')], default=0, verbose_name='URL类型')),
                ('url_name', models.CharField(max_length=64, verbose_name='一层菜单路径')),
                ('order', models.SmallIntegerField(default=0, verbose_name='菜单排序')),
            ],
            options={
                'verbose_name_plural': '第一层菜单',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Groups',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('description', models.CharField(blank=True, max_length=320, null=True, verbose_name='描述')),
            ],
            options={
                'verbose_name_plural': '权限组',
                'ordering': ['-pk'],
            },
            bases=('auth.group',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='SubMenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='二层菜单名')),
                ('url_type', models.SmallIntegerField(choices=[(0, '相关的名字'), (1, '固定的URL')], default=0, verbose_name='URL类型')),
                ('url_name', models.CharField(max_length=64, verbose_name='二层菜单路径')),
                ('order', models.SmallIntegerField(default=0, verbose_name='菜单排序')),
            ],
            options={
                'verbose_name_plural': '第二层菜单',
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rolename', models.CharField(max_length=64, unique=True, verbose_name='角色名称')),
                ('statue', models.SmallIntegerField(choices=[(0, '作废'), (1, '有效')], default=1, verbose_name='状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('menus', models.ManyToManyField(blank=True, to='user.FirstLayerMenu', verbose_name='一层菜单')),
            ],
            options={
                'verbose_name_plural': '角色表',
                'ordering': ['-pk'],
            },
        ),
        migrations.AddField(
            model_name='firstlayermenu',
            name='sub_menus',
            field=models.ManyToManyField(blank=True, to='user.SubMenu'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='邮箱')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.SmallIntegerField(choices=[(0, '否'), (1, '是')], default=0, verbose_name='超级用户')),
                ('user_id', models.CharField(max_length=32, primary_key=True, serialize=False, verbose_name='用户ID')),
                ('mobile', models.CharField(max_length=11, unique=True, verbose_name='手机号码')),
                ('name', models.CharField(max_length=32, verbose_name='用户名')),
                ('is_active', models.SmallIntegerField(choices=[(0, '否'), (1, '是')], default=1, verbose_name='活动状态')),
                ('sex', models.SmallIntegerField(choices=[(0, '男'), (1, '女'), (2, '未知')], default=2, verbose_name='性别')),
                ('upload', models.ImageField(default='icon/default.png', upload_to='icon', verbose_name='头像')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生年月')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建日期')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新日期')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('role', models.ManyToManyField(blank=True, null=True, to='user.Role', verbose_name='角色')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': '用户信息表',
                'ordering': ['-pk'],
            },
        ),
    ]
